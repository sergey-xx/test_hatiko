version: '3.9'

services:
  nginx:
    image: nginx:1.22.1
    restart: always
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static:/static
      - ./media:/media
    depends_on:
      - admin_panel

  redis:
    image: redis:latest
    restart: always
    # Для продакшена удалить порты (2 строки)
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    environment:
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASES=${REDIS_DATABASES}
    volumes:
      - redis:/data

  postgres:
    image: postgres:latest
    env_file: .env
    # Для продакшена удалить порты (2 строки)
    ports:
      - ${DB_PORT}:${DB_PORT}
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 30s
      retries: 5

  admin_panel:
    build:
      context: .
    restart: always
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      REDIS_HOST: redis
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - 9000:8000
    volumes:
      - ./static:/static
      - ./media:/media

  bot:
    build:
      context: .
    env_file:
      - .env
    restart: always
    environment:
      DB_HOST: postgres
      REDIS_HOST: redis
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: ['python', 'manage.py', 'runbot']

volumes:
  redis:
  postgres:
